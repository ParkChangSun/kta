{"version":3,"sources":["mybase.js","services/firestore.js","hooks/useCheckFriend.js","hooks/useFriendsList.js","hooks/useSearchedList.js","components/FriendButton/FriendButton.js","components/SmallProfile/SmallProfile.js","routes/Auth/Auth.js","routes/Home/Home.js","components/Navigation/Navigation.js","components/ProfileForm/ProfileForm.js","routes/MyProfile/MyProfile.js","routes/OtherProfile/OtherProfile.js","routes/NotFound/NotFound.js","components/Footer/Footer.js","routes/OpenChat/OpenChat.js","components/AppRouter.js","components/Loading/Loading.js","components/App/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","requestFriend","requestorId","receiverId","a","collection","doc","set","requestedAt","Date","now","console","log","deleteFriend","where","get","docs","ref","delete","updateMyProfile","dataObject","userId","revisedAt","UserIdContext","createContext","require","useState","useEffect","useCheckFriend","otherId","isFriend","setIsFriend","isMyself","setIsMyself","onSnapshot","snapshot","empty","SmallProfile","default","useFriendsList","targetId","friends","setFriends","query","promiseArray","map","data","Promise","all","values","docSnap","otherData","getFriends","useSearchedList","setData","snapshotArray","FriendButton","userContext","useContext","className","onClick","userName","unit","to","Auth","provider","GoogleAuthProvider","signInWithPopup","credential","user","uid","exists","myDataObject","displayName","Home","info","setInfo","setSmallProfileList","onSubmit","event","preventDefault","type","placeholder","onChange","value","target","Navigation","setIsLoggedIn","history","useHistory","signOut","push","ProfileForm","newUserName","setNewUserName","newUnitName","setNewUnitName","name","snapShot","MyProfile","OtherProfile","match","userData","setUserData","params","snap","getUserData","NotFound","Footer","href","OpenChat","chatList","setChatList","head","setHead","dateString","toLocaleString","timestamp","makeLoadedChatList","orderBy","limitToLast","then","scroll","document","querySelector","scrollTop","scrollHeight","clientHeight","onScroll","endBefore","prev","concat","AppRouter","isLoggedIn","basename","exact","path","render","props","component","from","Loading","App","init","setInit","userObj","setUserObj","setUserId","onAuthStateChanged","Provider","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2880c913.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import { dbService } from \"mybase\";\nimport { createContext } from \"react\";\n\nconst requestFriend = async (requestorId, receiverId) => {\n  await dbService.collection(\"relationship\").doc().set({\n    requestorId: requestorId,\n    receiverId: receiverId,\n    requestedAt: Date.now(),\n  });\n  console.log(requestorId);\n};\n\nconst deleteFriend = async (requestorId, receiverId) => {\n  const relationSnap = await dbService\n    .collection(\"relationship\")\n    .where(\"requestorId\", \"==\", requestorId)\n    .where(\"receiverId\", \"==\", receiverId)\n    .get();\n  relationSnap.docs[0].ref.delete();\n};\n\nconst updateMyProfile = async (dataObject) => {\n  await dbService.doc(`profile/${dataObject.userId}`).set({\n    ...dataObject,\n    revisedAt: Date.now(),\n  });\n};\n\nexport { requestFriend, deleteFriend, updateMyProfile };\nexport const UserIdContext = createContext({});\n","const { dbService } = require(\"mybase\");\nconst { useState, useEffect } = require(\"react\");\n\nconst useCheckFriend = (userId, otherId) => {\n  const [isFriend, setIsFriend] = useState(false);\n  const [isMyself, setIsMyself] = useState(false);\n  useEffect(() => {\n    const checkIsFriend = () => {\n      const unSubscribe = dbService\n        .collection(\"relationship\")\n        .where(\"requestorId\", \"==\", userId)\n        .where(\"receiverId\", \"==\", otherId)\n        .onSnapshot((snapshot) => {\n          setIsFriend(!snapshot.empty);\n        });\n      return unSubscribe;\n    };\n    if (userId === otherId) {\n      setIsMyself(true);\n    }\n    const unSubscribe = checkIsFriend();\n    return unSubscribe;\n  }, [userId, otherId]);\n  return [isFriend, isMyself];\n};\n\nexport { useCheckFriend };\n","const {\n  default: SmallProfile,\n} = require(\"components/SmallProfile/SmallProfile\");\nconst { dbService } = require(\"mybase\");\nconst { useState, useEffect } = require(\"react\");\n\nconst useFriendsList = (targetId) => {\n  const [friends, setFriends] = useState([]);\n  useEffect(() => {\n    const getFriends = async () => {\n      const query = await dbService\n        .collection(\"relationship\")\n        .where(\"requestorId\", \"==\", targetId)\n        .get();\n      const promiseArray = query.docs.map((doc) =>\n        dbService.doc(`profile/${doc.data().receiverId}`).get()\n      );\n      const values = await Promise.all(promiseArray);\n      setFriends(\n        values.map((docSnap) => (\n          <SmallProfile\n            key={docSnap.data().userId}\n            otherData={docSnap.data()}\n          />\n        ))\n      );\n    };\n    if (targetId) getFriends();\n  }, [targetId]);\n  return friends;\n};\n\nexport { useFriendsList };\n","import SmallProfile from \"components/SmallProfile/SmallProfile\";\n\nconst { useState } = require(\"react\");\n\nconst useSearchedList = () => {\n  const [data, setData] = useState([]);\n  const setSmallProfiles = (snapshotArray) => {\n    setData(\n      snapshotArray.map((docSnap) => (\n        <SmallProfile key={docSnap.data().userId} otherData={docSnap.data()} />\n      ))\n    );\n  };\n  return [data, setSmallProfiles];\n};\n\nexport { useSearchedList };\n","import { useCheckFriend } from \"hooks\";\nimport React, { useContext } from \"react\";\nimport { deleteFriend, requestFriend, UserIdContext } from \"services/firestore\";\nimport \"./FriendButton.css\";\n\nconst FriendButton = ({ otherId }) => {\n  const userContext = useContext(UserIdContext);\n  const [isFriend, isMyself] = useCheckFriend(userContext.userId, otherId);\n  const onClick = () => {\n    if (isFriend) {\n      deleteFriend(userContext.userId, otherId);\n    } else {\n      requestFriend(userContext.userId, otherId);\n    }\n  };\n\n  return isMyself ? (\n    <button className=\"friendbutton\">it's you!</button>\n  ) : (\n    <button onClick={onClick} className=\"friendbutton\">\n      {isFriend ? \"delete friend\" : \"add friend\"}\n    </button>\n  );\n};\n\nexport default FriendButton;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport FriendButton from \"../FriendButton/FriendButton\";\nimport \"./SmallProfile.css\";\n\nconst SmallProfile = ({ otherData }) => {\n  return (\n    <li className=\"smallprofile\">\n      <p>{otherData.userName}</p>\n      <p>{otherData.unit}</p>\n      <Link to={`/profile/${otherData.userId}`}>see profile</Link>\n      <FriendButton otherId={otherData.userId} />\n    </li>\n  );\n};\n\nexport default SmallProfile;\n","import { authService, dbService, firebaseInstance } from \"mybase\";\nimport React from \"react\";\nimport { updateMyProfile } from \"services/firestore\";\nimport \"./Auth.css\";\n\nconst Auth = () => {\n  const provider = new firebaseInstance.auth.GoogleAuthProvider();\n  const onClick = async () => {\n    const credential = await authService.signInWithPopup(provider);\n    const userSnap = await dbService\n      .doc(`profile/${credential.user.uid}`)\n      .get();\n    if (!userSnap.exists) {\n      const myDataObject = {\n        userId: credential.user.uid,\n        userName: credential.user.displayName,\n        unit: \"\",\n      };\n      updateMyProfile(myDataObject);\n    }\n  };\n\n  return (\n    <div className=\"auth\">\n      <p>Sign in</p>\n      <button onClick={onClick}>Google</button>\n    </div>\n  );\n};\n\nexport default Auth;\n","import { useSearchedList } from \"hooks\";\nimport { dbService } from \"mybase\";\nimport React, { useState } from \"react\";\nimport \"./Home.css\";\n\nconst Home = () => {\n  const [info, setInfo] = useState(\"\");\n  const [data, setSmallProfileList] = useSearchedList();\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setInfo(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    const query = await dbService\n      .collection(\"profile\")\n      .where(\"userName\", \"==\", info)\n      .get();\n    setSmallProfileList(query.docs);\n  };\n\n  return (\n    <div className=\"home\">\n      <p>are you looking for someone?</p>\n      <form onSubmit={onSubmit} className=\"searchForm\">\n        <input\n          type=\"text\"\n          placeholder=\"type name here...\"\n          onChange={onChange}\n        />\n        <input type=\"submit\" value=\"search\" />\n      </form>\n      <ul className=\"usersfoundlist\">{data}</ul>\n    </div>\n  );\n};\n\nexport default Home;\n","import { authService } from \"mybase\";\nimport React, { useContext } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { UserIdContext } from \"services/firestore\";\nimport \"./Navigation.css\";\n\nconst Navigation = ({ setIsLoggedIn }) => {\n  const userContext = useContext(UserIdContext);\n  const history = useHistory();\n  const onClick = () => {\n    authService.signOut();\n    setIsLoggedIn(false);\n    history.push(\"/\");\n  };\n\n  return (\n    <nav className=\"navigation\">\n      <ul>\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/myprofile\">{userContext?.userName}</Link>\n        </li>\n        <li>\n          <Link to=\"/openchat\">Openchat</Link>\n        </li>\n        <li>\n          <button onClick={onClick}>Sign out</button>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import { dbService } from \"mybase\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { updateMyProfile, UserIdContext } from \"services/firestore\";\n\nconst ProfileForm = () => {\n  const userContext = useContext(UserIdContext);\n  const [newUserName, setNewUserName] = useState(userContext.userName);\n  const [newUnitName, setNewUnitName] = useState(userContext.unit);\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"name\") {\n      setNewUserName(value);\n    } else if (name === \"unit\") {\n      setNewUnitName(value);\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    const myDataObject = {\n      userId: userContext.userId,\n      userName: newUserName,\n      unit: newUnitName,\n    };\n    updateMyProfile(myDataObject);\n  };\n\n  useEffect(() => {\n    const unSubscribe = dbService\n      .doc(`profile/${userContext.userId}`)\n      .onSnapshot((snapShot) => {\n        setNewUnitName(snapShot.data()?.unit);\n      });\n    return unSubscribe;\n  }, [userContext]);\n\n  return (\n    <form onSubmit={onSubmit}>\n      <input\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"name\"\n        value={newUserName}\n        onChange={onChange}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"unit that you belong to\"\n        name=\"unit\"\n        value={newUnitName || \"\"}\n        onChange={onChange}\n      />\n      <input type=\"submit\" value=\"update profile\" />\n    </form>\n  );\n};\n\nexport default ProfileForm;\n","import ProfileForm from \"components/ProfileForm/ProfileForm\";\nimport { useFriendsList } from \"hooks\";\nimport React, { useContext } from \"react\";\nimport { UserIdContext } from \"services/firestore\";\nimport \"./MyProfile.css\";\n\nconst MyProfile = () => {\n  const userContext = useContext(UserIdContext);\n  const friends = useFriendsList(userContext.userId);\n\n  return (\n    <div className=\"myprofile\">\n      <p>my profile</p>\n      <ProfileForm />\n      <p>friends</p>\n      <ul className=\"friendslist\">{friends}</ul>\n    </div>\n  );\n};\n\nexport default MyProfile;\n","import FriendButton from \"components/FriendButton/FriendButton\";\nimport { useFriendsList } from \"hooks\";\nimport { dbService } from \"mybase\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./OtherProfile.css\";\n\n// myprofile + otherprofile => ?\nconst OtherProfile = ({ match }) => {\n  const [userData, setUserData] = useState(null);\n\n  useEffect(() => {\n    const getUserData = async () => {\n      const snap = await dbService.doc(`profile/${match.params.userId}`).get();\n      const data = snap.data();\n      setUserData(data);\n    };\n    getUserData();\n  }, [match]);\n\n  const friends = useFriendsList(userData?.userId);\n  return (\n    <div className=\"otherprofile\">\n      <p>{userData?.userName}'s profile</p>\n      <p>unit : {userData?.unit}</p>\n      <p>list of friends</p>\n      {userData ? <ul className=\"friendslist\">{friends}</ul> : <p>loading</p>}\n      {userData && <FriendButton otherId={userData.userId} />}\n    </div>\n  );\n};\n\nexport default OtherProfile;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst NotFound = () => {\n  return (\n    <>\n      <h1>Page Not Found</h1>\n      <Link to=\"/\">home</Link>\n    </>\n  );\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport \"./Footer.css\";\n\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n      <p>SGT Park</p>\n      <p>\n        Do you have any ideas for kta? Go to{\" \"}\n        <a href=\"https://github.com/ParkChangSun/kta\">Github</a>\n      </p>\n    </div>\n  );\n};\n\nexport default Footer;\n","import { dbService } from \"mybase\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { UserIdContext } from \"services/firestore\";\nimport \"./OpenChat.css\";\n\nconst OpenChat = () => {\n  const userContext = useContext(UserIdContext);\n  const [data, setData] = useState(\"\");\n  const [chatList, setChatList] = useState([]);\n  const [head, setHead] = useState({});\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setData(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.collection(\"chat\").doc().set({\n      dateString: new Date().toLocaleString(),\n      timestamp: Date.now(),\n      userId: userContext.userId,\n      userName: userContext.userName,\n      data: data,\n    });\n    setData(\"\");\n  };\n\n  const makeLoadedChatList = (docs) => {\n    return docs.map((doc) => (\n      <li key={doc.data().timestamp} className=\"chatmessage\">\n        <p className=\"meta\">{doc.data().dateString}</p>\n        <p className=\"meta\">{doc.data().userName}'s message</p>\n        <p className=\"data\">{doc.data().data}</p>\n      </li>\n    ));\n  };\n\n  const onScroll = (event) => {\n    const {\n      target: { scrollTop },\n    } = event;\n\n    if (scrollTop === 0) {\n      const headRef = dbService\n        .collection(\"chat\")\n        .orderBy(\"timestamp\", \"asc\")\n        .endBefore(head)\n        .limitToLast(5);\n      headRef.get().then((snapshot) => {\n        if (!snapshot.docs[0]) {\n          return;\n        }\n        setHead(snapshot.docs[0]);\n        setChatList((prev) => {\n          return makeLoadedChatList(snapshot.docs).concat(prev);\n        });\n      });\n    }\n  };\n\n  useEffect(() => {\n    const firstRef = dbService\n      .collection(\"chat\")\n      .orderBy(\"timestamp\", \"asc\")\n      .limitToLast(15);\n    firstRef.get().then((snapshot) => {\n      setHead(snapshot.docs[0]);\n      setChatList(makeLoadedChatList(snapshot.docs));\n      const scroll = document.querySelector(\".chatlist\");\n      scroll.scrollTop = scroll.scrollHeight - scroll.clientHeight;\n    });\n  }, []);\n\n  return (\n    <div className=\"openchat\">\n      <ul className=\"chatlist\" onScroll={onScroll}>\n        {chatList}\n      </ul>\n      <form className=\"chatform\" onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          value={data}\n          onChange={onChange}\n          placeholder=\"enter message here...\"\n          className=\"chatinput\"\n        />\n        <input type=\"submit\" value=\"chat\" />\n      </form>\n    </div>\n  );\n};\n\nexport default OpenChat;\n","import React from \"react\";\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth/Auth\";\nimport Home from \"routes/Home/Home\";\nimport Navigation from \"components/Navigation/Navigation\";\nimport MyProfile from \"routes/MyProfile/MyProfile\";\nimport OtherProfile from \"routes/OtherProfile/OtherProfile\";\nimport NotFound from \"routes/NotFound/NotFound\";\nimport Footer from \"components/Footer/Footer\";\nimport OpenChat from \"routes/OpenChat/OpenChat\";\n\nconst AppRouter = ({ isLoggedIn, setIsLoggedIn }) => {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      {isLoggedIn && <Navigation setIsLoggedIn={setIsLoggedIn} />}\n      {isLoggedIn ? (\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/myprofile\">\n            <MyProfile />\n          </Route>\n          <Route\n            path=\"/profile/:userId\"\n            render={(props) => <OtherProfile {...props} />}\n          />\n          <Route path=\"/openchat\">\n            <OpenChat />\n          </Route>\n          <Route component={NotFound} />\n        </Switch>\n      ) : (\n        <Switch>\n          <Route exact path=\"/\">\n            <Auth />\n          </Route>\n          <Redirect from=\"*\" to=\"/\" />\n        </Switch>\n      )}\n      <Footer />\n    </BrowserRouter>\n  );\n};\n\nexport default AppRouter;\n","import React from \"react\";\n\nconst Loading = () => {\n  return <p>Loading...</p>;\n};\n\nexport default Loading;\n","import { authService, dbService } from \"mybase\";\nimport React, { useEffect, useState } from \"react\";\nimport { UserIdContext } from \"services/firestore\";\nimport AppRouter from \"../AppRouter\";\nimport Loading from \"../Loading/Loading\";\nimport \"./App.css\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userId, setUserId] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserId(user.uid);\n        setIsLoggedIn(true);\n      } else {\n        setUserId(\"\");\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    if (userId !== \"\") {\n      const unSubscribe = dbService\n        .doc(`profile/${userId}`)\n        .onSnapshot((snapshot) => {\n          setUserObj(snapshot.data());\n          setInit(true);\n        });\n      return unSubscribe;\n    } else {\n      console.log(\"userid is null\");\n      setInit(true);\n    }\n  }, [userId]);\n\n  return (\n    <UserIdContext.Provider value={userObj}>\n      {init ? (\n        <AppRouter isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} />\n      ) : (\n        <Loading />\n      )}\n    </UserIdContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}